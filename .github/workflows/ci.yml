name: CI Pipeline

on:
  push:
    branches:
      - '*'
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
      - 'v[0-9].[0-9]+.[0-9]+-alpha.[0-9]+'
      - 'v[0-9].[0-9]+.[0-9]+-beta.[0-9]+'
  pull_request:
  release:
    types:
      - created

env:
  SERVER_IP: 206.189.63.151

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Linting
        run: yarn eslint
  audit:
    name: Audit libraries
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Auditing
        run: yarn audit
  
  build:
    name: Test building
    needs: [lint, audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Building
        run: yarn build

  test:
    name: Test code
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Testing
        run: yarn test
  
  deploy-dev:
    name: Deploy a development version
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-alpha.')}}
    env:
      SERVER_HTML_PATH: '/home/deploy-dev/dev.my-group-car.de/html'
      SSH_KEY: ${{secrets.SSH_KEY_DEV}}
      SSH_KNOWN_HOST: ${{secrets.SSH_KNOWN_HOST_DEV}}
      SERVER_USER: 'deploy-dev'
      SENTRY_DSN: ${{secrets.SENTRY_DSN_DEV}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Generate documentation
        run: yarn doc
      - name: Build
        run: yarn build --prod
      - name: Configure ssh
        run: bash scripts/configure_ssh.sh
      - name: Deploy
        run: bash scripts/deploy.sh
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT_DEV}}
        with:
          environment: production
          version: ${{github.ref}}
          sourcemaps: './build'
  deploy-beta:
    name: Deploy a beta version
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && contains(github.ref, '-beta.')}}
    env:
      SERVER_HTML_PATH: '/home/deploy-beta/beta.my-group-car.de/html'
      SSH_KEY: ${{secrets.SSH_KEY_BETA}}
      SSH_KNOWN_HOST: ${{secrets.SSH_KNOWN_HOST_BETA}}
      SERVER_USER: 'deploy-beta'
      SENTRY_DSN: ${{secrets.SENTRY_DSN_BETA}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Generate documentation
        run: yarn doc
      - name: Build
        run: yarn build --prod
      - name: Configure ssh
        run: bash scripts/configure_ssh.sh
      - name: Deploy
        run: bash scripts/deploy.sh
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT_BETA}}
        with:
          environment: production
          version: ${{github.ref}}
          sourcemaps: './build'
  deploy-release:
    name: Deploy a release version
    runs-on: ubuntu-latest
    needs: test
    if: ${{github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && !contains(github.ref, '-beta.') && !contains(github.ref, '-dev.') && !contains(github.ref, '-')}}
    env:
      SERVER_HTML_PATH: '/home/deploy/my-group-car.de/html'
      SSH_KEY: ${{secrets.SSH_KEY}}
      SSH_KNOWN_HOST: ${{secrets.SSH_KNOWN_HOST}}
      SERVER_USER: 'deploy'
      SENTRY_DSN: ${{secrets.SENTRY_DSN}}
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - run: yarn install
      - name: Generate documentation
        run: yarn doc
      - name: Build
        run: yarn build --prod
      - name: Configure ssh
        run: bash scripts/configure_ssh.sh
      - name: Deploy
        run: bash scripts/deploy.sh
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          SENTRY_ORG: ${{secrets.SENTRY_ORG}}
          SENTRY_PROJECT: ${{secrets.SENTRY_PROJECT}}
        with:
          environment: production
          version: ${{github.ref}}
          sourcemaps: './build'

